# in a large group of people, it is likely more than a few of them will have the same birthday. This program tests that theory.

import datetime
import random

# get the birthdays by year/month/day
def getBirthdays(numberOfBirthdays):
    birthdays = []
    for i in range(numberOfBirthdays):
        startOfYear = datetime.date(2001, 1, 1)

        randomNumberOfDays = datetime.timedelta(random.randint(0, 364))
        birthday = startOfYear + randomNumberOfDays
        birthdays.append(birthday)
    return birthdays

def getMatch(birthdays):
    if len(birthdays) == len(set(birthdays)):
        return None     # all birthdays are unique, no matches
    for a, birthdayA in enumerate(birthdays):
        for b, birthdayB in enumerate(birthdays[a+1:]):
            if birthdayA == birthdayB:
                return birthdayA    # it is a match!

print("This program shows that in a large group of people, the number of people with the same birthday"
      " is surprisingly large.")
MONTHS = ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec')
while True:
    print("How many birthdays should I generate? (Max is 100)")
    response = input('> ')
    if response.isdecimal() and (0 < int(response) <= 100):
        numBDays = int(response)
        break       # the user has inputted an acceptable amount
    print()

# Generate and display the birthdays
print('Here are', numBDays, 'birthdays: ')
birthdays = getBirthdays(numBDays)
for i, birthday in enumerate(birthdays):
    if i != 0:
        print(', ', end='')
    monthName = MONTHS[birthday.month - 1]
    dateText = '{} {}'.format(monthName, birthday.day)
    print(dateText, end='')
print()
print()
match = getMatch(birthdays)     # do any birthdays match?

# Display the results
print('In this simulation, ', end='')
if match != None:
    monthName = MONTHS[match.month -1]
    dateText = '{} {}'.format(monthName, match.day)
    print('Multiple people have a birthday on', dateText)
else:
    print('There are no matching birthdays.')
print()

# Run this through 100,000 simulations
print('We will generate', numBDays, 'random birthdays 100,000 times.')
input('Press Enter to begin...')
print('\nLet\'s run another 100,000 simulations...\n')
simMatch = 0        # simMatch is how many simulations had matching birthdays
for i in range(100_000):        # the underscore can substitute a comma for large numbers
    if i % 10_000 == 0:
        print(i, 'simulations run...')
    birthdays = getBirthdays(numBDays)
    if getMatch(birthdays) != None:
        simMatch = simMatch + 1
print('100,000 simulations run.')

# Display the simulation results
probability = round(simMatch / 100_000 * 100, 2)
print('\nOut of 100,000 simulations of', numBDays, 'people, there was a')
print('matching birthday in that group', simMatch, 'times. This means')
print('that', numBDays, 'people have a', probability, '% chance of')
print('having a matching birthday in their group.')
print('That\'s probably more than you would have thought!')
